$date
	Fri Dec  3 19:12:45 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module program $end
$scope module bord $end
$var wire 8 ! Bus [7:0] $end
$var wire 1 " hlt $end
$var wire 1 # zf $end
$var wire 1 $ sumout $end
$var wire 1 % sub $end
$var wire 1 & ramwa $end
$var wire 1 ' ramoa $end
$var wire 1 ( pcoe $end
$var wire 1 ) pcjmp $end
$var wire 1 * pcinc $end
$var wire 1 + outregwa $end
$var wire 1 , marwa $end
$var wire 9 - instin [8:0] $end
$var wire 1 . inregwa $end
$var wire 1 / inregoa $end
$var wire 1 0 flagsin $end
$var wire 8 1 display [7:0] $end
$var wire 3 2 cucountout [2:0] $end
$var wire 1 3 cf $end
$var wire 1 4 bwa $end
$var wire 1 5 awa $end
$var wire 1 6 aoa $end
$var wire 4 7 addrout [3:0] $end
$var reg 1 8 boa $end
$var reg 1 9 clk $end
$var reg 1 : clr $end
$var reg 1 ; ramcs $end
$scope module a $end
$var wire 1 9 clk $end
$var wire 1 : clr $end
$var wire 8 < data_in [7:0] $end
$var wire 8 = data_out [7:0] $end
$var wire 1 5 wa $end
$var wire 1 6 oa $end
$var reg 8 > store [7:0] $end
$upscope $end
$scope module alunit $end
$var wire 8 ? a [7:0] $end
$var wire 1 9 clk $end
$var wire 8 @ out [7:0] $end
$var wire 1 $ sumout $end
$var wire 8 A suminb [7:0] $end
$var wire 8 B sum [7:0] $end
$var wire 1 % sub $end
$var wire 1 0 flagsin $end
$var wire 1 C cin $end
$var wire 1 D cf1 $end
$var wire 8 E b [7:0] $end
$var reg 1 3 carryflg $end
$var reg 1 # zeroflg $end
$scope module addr $end
$var wire 8 F a [7:0] $end
$var wire 8 G b [7:0] $end
$var wire 1 C cin $end
$var wire 8 H sum [7:0] $end
$var wire 1 D cout $end
$var wire 1 I c0 $end
$scope module ad0 $end
$var wire 4 J a [3:0] $end
$var wire 4 K b [3:0] $end
$var wire 1 C cin $end
$var wire 4 L sum [3:0] $end
$var wire 1 I cout $end
$var wire 1 M c2 $end
$var wire 1 N c1 $end
$var wire 1 O c0 $end
$scope module ad0 $end
$var wire 1 P a $end
$var wire 1 Q b $end
$var wire 1 R c $end
$var wire 1 C cin $end
$var wire 1 O cout $end
$var wire 1 S d $end
$var wire 1 T e $end
$var wire 1 U sum $end
$upscope $end
$scope module ad1 $end
$var wire 1 V a $end
$var wire 1 W b $end
$var wire 1 X c $end
$var wire 1 O cin $end
$var wire 1 N cout $end
$var wire 1 Y d $end
$var wire 1 Z e $end
$var wire 1 [ sum $end
$upscope $end
$scope module ad2 $end
$var wire 1 \ a $end
$var wire 1 ] b $end
$var wire 1 ^ c $end
$var wire 1 N cin $end
$var wire 1 M cout $end
$var wire 1 _ d $end
$var wire 1 ` e $end
$var wire 1 a sum $end
$upscope $end
$scope module ad3 $end
$var wire 1 b a $end
$var wire 1 c b $end
$var wire 1 d c $end
$var wire 1 M cin $end
$var wire 1 I cout $end
$var wire 1 e d $end
$var wire 1 f e $end
$var wire 1 g sum $end
$upscope $end
$upscope $end
$scope module ad1 $end
$var wire 4 h a [3:0] $end
$var wire 4 i b [3:0] $end
$var wire 1 I cin $end
$var wire 4 j sum [3:0] $end
$var wire 1 D cout $end
$var wire 1 k c2 $end
$var wire 1 l c1 $end
$var wire 1 m c0 $end
$scope module ad0 $end
$var wire 1 n a $end
$var wire 1 o b $end
$var wire 1 p c $end
$var wire 1 I cin $end
$var wire 1 m cout $end
$var wire 1 q d $end
$var wire 1 r e $end
$var wire 1 s sum $end
$upscope $end
$scope module ad1 $end
$var wire 1 t a $end
$var wire 1 u b $end
$var wire 1 v c $end
$var wire 1 m cin $end
$var wire 1 l cout $end
$var wire 1 w d $end
$var wire 1 x e $end
$var wire 1 y sum $end
$upscope $end
$scope module ad2 $end
$var wire 1 z a $end
$var wire 1 { b $end
$var wire 1 | c $end
$var wire 1 l cin $end
$var wire 1 k cout $end
$var wire 1 } d $end
$var wire 1 ~ e $end
$var wire 1 !" sum $end
$upscope $end
$scope module ad3 $end
$var wire 1 "" a $end
$var wire 1 #" b $end
$var wire 1 $" c $end
$var wire 1 k cin $end
$var wire 1 D cout $end
$var wire 1 %" d $end
$var wire 1 &" e $end
$var wire 1 '" sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module b $end
$var wire 1 9 clk $end
$var wire 1 : clr $end
$var wire 8 (" data_in [7:0] $end
$var wire 8 )" data_out [7:0] $end
$var wire 1 8 oa $end
$var wire 1 4 wa $end
$var reg 8 *" store [7:0] $end
$upscope $end
$scope module ctrlunit $end
$var wire 1 " hlt $end
$var wire 9 +" instin [8:0] $end
$var wire 1 $ sumout $end
$var wire 1 % sub $end
$var wire 1 & ramwa $end
$var wire 1 ' ramoa $end
$var wire 1 ( pcoe $end
$var wire 1 ) pcjmp $end
$var wire 1 * pcinc $end
$var wire 1 + outregwa $end
$var wire 1 , marwa $end
$var wire 1 . inregwa $end
$var wire 1 / inregoa $end
$var wire 1 0 flagsin $end
$var wire 1 4 bwa $end
$var wire 1 5 awa $end
$var wire 1 6 aoa $end
$var reg 16 ," controlword [15:0] $end
$upscope $end
$scope module cucounter $end
$var wire 1 -" clk $end
$var wire 1 : clr $end
$var wire 3 ." out [2:0] $end
$var reg 3 /" store [2:0] $end
$upscope $end
$scope module instructionreg $end
$var wire 8 0" busin [7:0] $end
$var wire 1 9 clk $end
$var wire 1 : clr $end
$var wire 1 / oa $end
$var wire 1 . wa $end
$var wire 4 1" addrout [3:0] $end
$var reg 8 2" store [7:0] $end
$upscope $end
$scope module mar $end
$var wire 4 3" busin [3:0] $end
$var wire 1 9 clk $end
$var wire 1 : clr $end
$var wire 1 , wa $end
$var wire 4 4" addrout [3:0] $end
$var reg 4 5" store [3:0] $end
$upscope $end
$scope module out $end
$var wire 8 6" busin [7:0] $end
$var wire 1 9 clk $end
$var wire 1 : clr $end
$var wire 8 7" display [7:0] $end
$var wire 1 + wa $end
$var reg 8 8" store [7:0] $end
$upscope $end
$scope module pc $end
$var wire 1 9 clk $end
$var wire 1 : clr $end
$var wire 4 9" in [3:0] $end
$var wire 1 * inc $end
$var wire 1 ) jmp $end
$var wire 1 ( oe $end
$var wire 4 :" out [3:0] $end
$var reg 4 ;" store [3:0] $end
$upscope $end
$scope module rm $end
$var wire 4 <" addr [3:0] $end
$var wire 8 =" bus [7:0] $end
$var wire 1 9 clk $end
$var wire 1 ; cs $end
$var wire 1 ' oa $end
$var wire 1 & wa $end
$var wire 8 >" data_out [7:0] $end
$var wire 8 ?" data_in [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bz ?"
bz >"
bzxxxx ="
bx <"
bx ;"
bx :"
bx 9"
bx 8"
bx 7"
bzxxxx 6"
bx 5"
bx 4"
bx 3"
bx 2"
bz 1"
bzxxxx 0"
b0 /"
b0 ."
1-"
b100000000000100 ,"
bx000xx +"
bx *"
bzxxxx )"
bzxxxx ("
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~
x}
x|
x{
xz
xy
xx
xw
xv
xu
xt
xs
xr
xq
xp
xo
xn
xm
xl
xk
bx j
bx i
bx h
xg
xf
xe
xd
xc
xb
xa
x`
x_
x^
x]
x\
x[
xZ
xY
xX
xW
xV
xU
0T
xS
xR
xQ
xP
xO
xN
xM
bx L
bx K
bx J
xI
bx H
bx G
bx F
bx E
xD
0C
bx B
bx A
bzxxxx @
bx ?
bx >
bzxxxx =
bzxxxx <
1;
1:
09
08
bx 7
06
05
04
x3
b0 2
bx 1
00
0/
0.
bx000xx -
1,
0+
0*
0)
1(
0'
0&
0%
0$
x#
0"
bzxxxx !
$end
#20
0a
0g
0s
0y
0!"
b0 j
0'"
0[
0N
0M
0I
0m
0l
0k
0D
b0 B
b0 H
b0 L
0U
0O
0Z
0`
0f
0r
0x
0~
0&"
0R
0S
0X
0Y
0^
0_
0d
0e
0p
0q
0v
0w
0|
0}
0$"
0%"
0Q
0W
0]
0c
0o
0u
0{
0#"
b0 9"
b0 3"
0P
0V
0\
0b
0n
0t
0z
0""
b0 K
b0 i
bz0000 !
bz0000 <
bz0000 =
bz0000 @
bz0000 ("
bz0000 )"
bz0000 0"
bz0000 6"
bz0000 ="
b0 :"
b0 J
b0 h
b0 A
b0 G
b0 ;"
b0 >
b0 ?
b0 F
b0 E
b0 *"
b0xx -
b0xx +"
b0 7
b0 4"
b0 5"
b0 <"
b0 2"
b0 1
b0 7"
b0 8"
0-"
19
#40
0:
1-"
09
#60
0-"
19
#80
b11110 >"
b1110 9"
b1110 3"
b11110 !
b11110 <
b11110 =
b11110 @
b11110 ("
b11110 )"
b11110 0"
b11110 6"
b11110 ="
bz :"
0,
1'
1.
1*
0(
b1010000001000 ,"
b1xx -
b1xx +"
b1 2
b1 ."
b1 /"
1-"
09
#100
b1 ;"
b1001xx -
b1001xx +"
b11110 2"
0-"
19
#120
bz >"
bz1110 !
bz1110 <
bz1110 =
bz1110 @
bz1110 ("
bz1110 )"
bz1110 0"
bz1110 6"
bz1110 ="
b1110 1"
1,
0'
1/
0.
0*
b100100000000000 ,"
b1010xx -
b1010xx +"
b10 2
b10 ."
b10 /"
1-"
09
#140
b1110 7
b1110 4"
b1110 5"
b1110 <"
0-"
19
#160
b111000 >"
b1000 9"
b1000 3"
b111000 !
b111000 <
b111000 =
b111000 @
b111000 ("
b111000 )"
b111000 0"
b111000 6"
b111000 ="
bz 1"
0,
1'
0/
15
b1001000000000 ,"
b1011xx -
b1011xx +"
b11 2
b11 ."
b11 /"
1-"
09
#180
b1000 L
1g
1s
b111000 B
b111000 H
b11 j
1y
1d
1p
1v
1b
1n
1t
b1000 J
b11 h
b111000 >
b111000 ?
b111000 F
0-"
19
#200
bz >"
bz 9"
bz 3"
bz !
bz <
bz =
bz @
bz ("
bz )"
bz 0"
bz 6"
bz ="
0'
05
b0 ,"
b1100xx -
b1100xx +"
b100 2
b100 ."
b100 /"
1-"
09
#220
0-"
19
#240
0f
0M
0`
0D
0N
0&"
0Z
0k
0O
0r
0x
0~
0T
0[
0a
1g
0I
1s
0m
1y
0l
0!"
b11 j
0'"
0R
0X
0^
1d
0e
1p
0q
1v
0w
0|
0$"
0Q
0W
0]
0c
0o
0u
0{
0#"
bz >"
b111000 B
b111000 H
b1000 L
0U
b0 K
b0 i
b1 9"
b1 3"
bz ?"
bz 1"
0C
b0 A
b0 G
bz0001 !
bz0001 <
bz0001 =
bz0001 @
bz0001 ("
bz0001 )"
bz0001 0"
bz0001 6"
bz0001 ="
b1 :"
0"
1,
0&
0'
0/
0.
05
06
0$
0%
04
0+
0*
1(
0)
00
b100000000000100 ,"
b1000xx -
b1000xx +"
b0 2
b0 ."
b0 /"
1-"
09
#260
b1 7
b1 4"
b1 5"
b1 <"
0-"
19
#280
b101111 >"
b1111 9"
b1111 3"
b101111 !
b101111 <
b101111 =
b101111 @
b101111 ("
b101111 )"
b101111 0"
b101111 6"
b101111 ="
bz :"
0,
1'
1.
1*
0(
b1010000001000 ,"
b1001xx -
b1001xx +"
b1 2
b1 ."
b1 /"
1-"
09
#300
b10 ;"
b10001xx -
b10001xx +"
b101111 2"
0-"
19
#320
bz >"
bz1111 !
bz1111 <
bz1111 =
bz1111 @
bz1111 ("
bz1111 )"
bz1111 0"
bz1111 6"
bz1111 ="
b1111 1"
1,
0'
1/
0.
0*
b100100000000000 ,"
b10010xx -
b10010xx +"
b10 2
b10 ."
b10 /"
1-"
09
#340
b1111 7
b1111 4"
b1111 5"
b1111 <"
0-"
19
#360
b100011 >"
b11 9"
b11 3"
b100011 !
b100011 <
b100011 =
b100011 @
b100011 ("
b100011 )"
b100011 0"
b100011 6"
b100011 ="
bz 1"
0,
1'
0/
14
b1000000100000 ,"
b10011xx -
b10011xx +"
b11 2
b11 ."
b11 /"
1-"
09
#380
1!"
1U
b1011 L
1[
b1011011 B
b1011011 H
b101 j
0y
1l
1R
1X
0v
1w
1Q
1W
1u
b11 K
b10 i
b100011 A
b100011 G
b100011 E
b100011 *"
0-"
19
#400
bz >"
b1011 9"
b1011 3"
b1011011 !
b1011011 <
b1011011 =
b1011011 @
b1011011 ("
b1011011 )"
b1011011 0"
b1011011 6"
b1011011 ="
0'
15
1$
04
10
b1010000001 ,"
b10100xx -
b10100xx +"
b100 2
b100 ."
b100 /"
1-"
09
#420
b1110 9"
b1110 3"
0'"
1a
b1111110 !
b1111110 <
b1111110 =
b1111110 @
b1111110 ("
b1111110 )"
b1111110 0"
b1111110 6"
b1111110 ="
0k
0U
1O
b1110 L
1[
1N
1y
0l
b1111110 B
b1111110 H
b111 j
1!"
0~
0R
1S
0X
1Y
1v
0w
1|
1P
1V
0t
1z
b1011 J
b101 h
b1011011 >
b1011011 ?
b1011011 F
0#
b1010000 -
b1010000 +"
03
0-"
19
#440
0~
0f
0l
0D
0M
0r
0x
0&"
0T
1O
1[
0Z
1N
1a
0`
1g
0I
1s
0m
1y
1!"
0k
b111 j
0'"
0R
1S
0X
1Y
0^
1d
0e
1p
0q
1v
1|
0}
0$"
1Q
1W
0]
0c
0o
1u
0{
0#"
bz >"
b1111110 B
b1111110 H
b1110 L
0U
b11 K
b10 i
b10 9"
b10 3"
bz ?"
bz 1"
0C
b100011 A
b100011 G
bz0010 !
bz0010 <
bz0010 =
bz0010 @
bz0010 ("
bz0010 )"
bz0010 0"
bz0010 6"
bz0010 ="
b10 :"
0"
1,
0&
0'
0/
0.
05
06
0$
0%
04
0+
0*
1(
0)
00
b100000000000100 ,"
b1000000 -
b1000000 +"
b0 2
b0 ."
b0 /"
1-"
09
#460
b10 7
b10 4"
b10 5"
b10 <"
0-"
19
#480
b11100000 >"
b0 9"
b0 3"
b11100000 !
b11100000 <
b11100000 =
b11100000 @
b11100000 ("
b11100000 )"
b11100000 0"
b11100000 6"
b11100000 ="
bz :"
0,
1'
1.
1*
0(
b1010000001000 ,"
b1000100 -
b1000100 +"
b1 2
b1 ."
b1 /"
1-"
09
#500
b11 ;"
b111000100 -
b111000100 +"
b11100000 2"
0-"
19
#520
bz >"
b1011 9"
b1011 3"
b1011011 !
b1011011 <
b1011011 =
b1011011 @
b1011011 ("
b1011011 )"
b1011011 0"
b1011011 6"
b1011011 ="
0'
0.
16
1+
0*
b100010000 ,"
b111001000 -
b111001000 +"
b10 2
b10 ."
b10 /"
1-"
09
#540
b1011011 1
b1011011 7"
b1011011 8"
0-"
19
#560
bz 9"
bz 3"
bz !
bz <
bz =
bz @
bz ("
bz )"
bz 0"
bz 6"
bz ="
06
0+
b0 ,"
b111001100 -
b111001100 +"
b11 2
b11 ."
b11 /"
1-"
09
#580
0-"
19
#600
b111010000 -
b111010000 +"
b100 2
b100 ."
b100 /"
1-"
09
#620
0-"
19
#640
0~
0f
0l
0D
0M
0r
0x
0&"
0T
1O
1[
0Z
1N
1a
0`
1g
0I
1s
0m
1y
1!"
0k
b111 j
0'"
0R
1S
0X
1Y
0^
1d
0e
1p
0q
1v
1|
0}
0$"
1Q
1W
0]
0c
0o
1u
0{
0#"
bz >"
b1111110 B
b1111110 H
b1110 L
0U
b11 K
b10 i
b11 9"
b11 3"
bz ?"
bz 1"
0C
b100011 A
b100011 G
bz0011 !
bz0011 <
bz0011 =
bz0011 @
bz0011 ("
bz0011 )"
bz0011 0"
bz0011 6"
bz0011 ="
b11 :"
0"
1,
0&
0'
0/
0.
05
06
0$
0%
04
0+
0*
1(
0)
00
b100000000000100 ,"
b111000000 -
b111000000 +"
b0 2
b0 ."
b0 /"
1-"
09
#660
b11 7
b11 4"
b11 5"
b11 <"
0-"
19
#680
b11110000 >"
b0 9"
b0 3"
b11110000 !
b11110000 <
b11110000 =
b11110000 @
b11110000 ("
b11110000 )"
b11110000 0"
b11110000 6"
b11110000 ="
bz :"
0,
1'
1.
1*
0(
b1010000001000 ,"
b111000100 -
b111000100 +"
b1 2
b1 ."
b1 /"
1-"
09
#700
b100 ;"
b111100100 -
b111100100 +"
b11110000 2"
0-"
19
#720
b111101000 -
b111101000 +"
b10 2
b10 ."
b10 /"
1-"
09
